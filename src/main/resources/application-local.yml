# 로컬 개발 환경 전용 설정
spring:
  datasource:
    url: jdbc:postgresql://postgres:5432/toktot_local
    username: toktot_user
    password: ${DB_PASSWORD}

  jpa:
    hibernate:
      ddl-auto: create-drop
    show-sql: true
    properties:
      hibernate:
        format_sql: true

  data:
    redis:
      host: redis
      port: 6379

  security:
    oauth2:
      client:
        registration:
          kakao:
            redirect-uri: http://localhost:3000/kakao/callback

# 로깅 설정 (더 자세히)
logging:
  level:
    com.toktot: DEBUG
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE
    org.springframework.security: DEBUG
    org.springframework.web: DEBUG
    com.toktot.external.tourapi: DEBUG

toktot:
  security:
    cors:
      allowed-origins: http://localhost:3000
  frontend:
    url: http://localhost:3000
  s3:
    bucket-name: ${S3_BUCKET_NAME}
    region: ap-northeast-2
  review:
    session:
      ttl-hours: 24
    image:
      max-count: 5
      max-size-mb: 5
      allowed-types: image/jpeg,image/png

# AWS S3 설정
aws:
  region: ap-northeast-2
  credentials:
    access-key: ${AWS_ACCESS_KEY_ID}
    secret-key: ${AWS_SECRET_ACCESS_KEY}

# TourAPI 설정
tour-api:
  # 기본 API 설정
  base-url: https://apis.data.go.kr/B551011/KorService2
  service-key: ${TOUR_API_SERVICE_KEY}

  # HTTP 클라이언트 설정
  timeout:
    connection: 5000  # 연결 타임아웃 (5초)
    read: 10000       # 읽기 타임아웃 (10초)

  # API 호출 제한 관리
  rate-limit:
    daily-limit: 1000        # 일일 호출 제한
    warning-threshold: 900   # 경고 임계값 (90%)
    danger-threshold: 950    # 위험 임계값 (95%)

  # 배치 처리 설정
  batch:
    chunk-size: 100         # 청크 단위 처리 크기
    max-retry-count: 3      # 최대 재시도 횟수
    retry-delay-ms: 1000    # 재시도 지연시간 (1초)

  # 스케줄러 설정
  scheduler:
    # 주 1회 데이터 동기화 (일요일 새벽 2시)
    data-sync: "0 0 2 * * SUN"
    # 월 1회 데이터 정리 (매월 1일 새벽 1시)
    cleanup: "0 0 1 1 * ?"

management:
  endpoint:
    health:
      show-details: always